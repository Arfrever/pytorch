name: Build Triton wheels

on:
  pull_request:

jobs:
  build-wheel:
    runs-on: [self-hosted, linux.2xlarge]
    strategy:
      fail-fast: false
      matrix:
        py_vers: [ "3.8", "3.9", "3.10" ]
    timeout-minutes: 40
    env:
      DOCKER_IMAGE: pytorch/manylinux-builder:cuda11.6
      PY_VERS: ${{ matrix.py_vers }}
    steps:
      - name: Checkout PyTorch
        uses: pytorch/pytorch/.github/actions/checkout-pytorch@master

      - name: Setup Linux
        uses: ./.github/actions/setup-linux

      - name: Setup SSH (Click me for login details)
        uses: pytorch/test-infra/.github/actions/setup-ssh@main
        with:
          github-secret: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull Docker image
        uses: pytorch/test-infra/.github/actions/pull-docker-image@main
        with:
          docker-image: ${{ env.DOCKER_IMAGE }}

      - name: Build Triton wheel
        run: |
          set -x
          mkdir -p artifacts/
          container_name=$(docker run \
            --tty \
            --detach \
            -v "${GITHUB_WORKSPACE}:/pytorch" \
            -w /pytorch/artifacts/ \
            "${DOCKER_IMAGE}"      \
          )

          # Determine python executable for given version
          case $PY_VERS in
          3.8)
            PYTHON_EXECUTABLE=/opt/python/cp38-cp38/bin/python
            ;;
          3.9)
            PYTHON_EXECUTABLE=/opt/python/cp39-cp39/bin/python
            ;;
          *)
            echo "Unsupported python version ${PY_VERS}"
            ;;
          esac

          docker exec -t "${container_name}" yum install -y zlib-devel
          docker exec -t "${container_name}" "${PYTHON_EXECUTABLE}" /pytorch/.github/scripts/build_triton_wheel.py
          docker exec -t "${container_name}" chown -R 1000.1000 /pytorch/artifacts

      - uses: actions/upload-artifact@v3
        with:
          name: "pytorch-triton-${{ matrix.py_vers }}"
          if-no-files-found: error
          path:
            ${{ runner.temp }}/artifacts/*

      - name: Teardown Linux
        uses: pytorch/test-infra/.github/actions/teardown-linux@main
        if: always()
